
type Field _;

type C _ _;

type ref;

type Set a = [a]bool;

type Heap = <a>[ref,Field a]a;

type notAllParams a b = Field b;

type Cyclic0 = Cyclic1;

type Cyclic1 = Cyclic0;

type AlsoCyclic a = <b>[AlsoCyclic b]int;

type C2 b a = C a b;

function f(C int bool) : int;

const x: C2 bool int;

const y: Field int bool;

const z: Set int bool;

const d: <a,b>[notAllParams a b]int;
<console>(14,-1): Error: type synonym could not be resolved because of cycles: Cyclic0 (replacing body with "bool" to continue resolving)
<console>(16,-1): Error: type synonym could not be resolved because of cycles: Cyclic1 (replacing body with "bool" to continue resolving)
<console>(18,-1): Error: type synonym could not be resolved because of cycles: AlsoCyclic (replacing body with "bool" to continue resolving)
<console>(26,8): Error: type constructor received wrong number of arguments: Field
<console>(28,8): Error: type synonym received wrong number of arguments: Set
<console>(30,8): Error: type variable must occur in map arguments: a
6 name resolution errors detected in TypeSynonyms0.bpl
