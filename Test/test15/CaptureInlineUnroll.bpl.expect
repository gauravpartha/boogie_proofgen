CaptureInlineUnroll.bpl(33,3): Error: This assertion might not hold.
Execution trace:
    CaptureInlineUnroll.bpl(23,5): anon0#2
*** MODEL
call1formal@y@0 -> (- 3)
call1formal@y@0@@0 -> 1
u -> 
u@0 -> 0
ControlFlow -> {
  0 0 -> 3
  0 2 -> (- 1)
  0 3 -> 2
  else -> (- 1)
}
tickleBool -> {
  false -> true
  true -> true
  else -> true
}
*** STATE <initial>
  u -> 
*** END_STATE
*** STATE 0 calls$renamed$Caller$0
  u -> 0
*** END_STATE
*** STATE 1 call$renamed$Caller$1
  u -> (- 3)
*** END_STATE
*** STATE 2 calls$renamed$Caller$2
  u -> 1
*** END_STATE
*** END_MODEL
CaptureInlineUnroll.bpl(40,3): Error: This assertion might not hold.
Execution trace:
    CaptureInlineUnroll.bpl(38,3): anon0#2
*** MODEL
x -> 2
y -> 
y@0 -> 3
ControlFlow -> {
  0 0 -> 3
  0 2 -> (- 1)
  0 3 -> 2
  else -> (- 1)
}
tickleBool -> {
  false -> true
  true -> true
  else -> true
}
*** STATE <initial>
  x -> 2
  y -> 
*** END_STATE
*** STATE Increment entry$renamed$Increment$0
*** END_STATE
*** END_MODEL

Boogie program verifier finished with 1 verified, 2 errors
CaptureInlineUnroll.bpl(13,5): Error: This assertion might not hold.
Execution trace:
    CaptureInlineUnroll.bpl(9,3): anon0#3
    CaptureInlineUnroll.bpl(12,5): anon3_LoopBody#3
    CaptureInlineUnroll.bpl(12,5): anon3_LoopBody#2
    CaptureInlineUnroll.bpl(12,5): anon3_LoopBody#1
*** MODEL
i -> 
i@0 -> 1
i@1 -> 2
i@2 -> 0
i@3 -> 0
n -> 3
ControlFlow -> {
  0 0 -> 13
  0 10 -> 8
  0 12 -> 10
  0 13 -> 12
  0 2 -> (- 3)
  0 8 -> 2
  else -> (- 3)
}
tickleBool -> {
  false -> true
  true -> true
  else -> true
}
*** STATE <initial>
  i -> 
  n -> 3
*** END_STATE
*** STATE procedure entry$renamed$LoopUnroll$0
*** END_STATE
*** STATE loop entry$renamed$LoopUnroll$1
  i -> 0
*** END_STATE
*** STATE loop entry$renamed$LoopUnroll$2
  i -> 1
*** END_STATE
*** STATE loop entry$renamed$LoopUnroll$3
  i -> 2
*** END_STATE
*** END_MODEL
CaptureInlineUnroll.bpl(40,3): Error: This assertion might not hold.
Execution trace:
    CaptureInlineUnroll.bpl(23,5): anon0#3
    CaptureInlineUnroll.bpl(38,3): inline$Increment$0$anon0#3
*** MODEL
inline$Increment$0$x -> 
inline$Increment$0$y -> 
inline$Increment$0$y@0 -> 
inline$Increment$0$y@1 -> 1
inline$Increment$1$x -> 
inline$Increment$1$y -> 
inline$Increment$1$y@1 -> 0
u -> 
u@0 -> 0
ControlFlow -> {
  0 0 -> 9
  0 6 -> (- 7)
  0 8 -> 6
  0 9 -> 8
  else -> (- 7)
}
tickleBool -> {
  false -> true
  true -> true
  else -> true
}
*** STATE <initial>
  inline$Increment$0$x -> 
  inline$Increment$0$y -> 
  inline$Increment$1$x -> 
  inline$Increment$1$y -> 
  u -> 
*** END_STATE
*** STATE 0 calls$renamed$Caller$0
  u -> 0
*** END_STATE
*** STATE Increment entry$renamed$Caller$1
  inline$Increment$0$x -> 0
  inline$Increment$0$y -> 
*** END_STATE
*** END_MODEL

Boogie program verifier finished with 0 verified, 2 errors
